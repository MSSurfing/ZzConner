// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Messages/GModels.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace GServices {

  /// <summary>Holder for reflection information generated from Messages/GModels.proto</summary>
  public static partial class GModelsReflection {

    #region Descriptor
    /// <summary>File descriptor for Messages/GModels.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static GModelsReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChZNZXNzYWdlcy9HTW9kZWxzLnByb3RvEglHU2VydmljZXMingYKBEdSZXES",
            "EQoJZG91YmxlXzEwGAogASgBEhAKCGZsb2F0XzExGAsgASgCEhAKCGludDMy",
            "XzIxGBUgASgFEhAKCGludDY0XzIyGBYgASgDEhEKCXVpbnQzMl8zMBgeIAEo",
            "DRIRCgl1aW50NjRfMzEYHyABKAQSEQoJc2ludDMyXzM1GCMgASgREhEKCXNp",
            "bnQ2NF8zNhgkIAEoEhISCgpmaXhlZDMyXzQwGCggASgHEhIKCmZpeGVkNjRf",
            "NDEYKSABKAYSEwoLc2ZpeGVkMzJfNDUYLSABKA8SEwoLc2ZpeGVkNjRfNDYY",
            "LiABKBASDwoHYm9vbF83MBhGIAEoCBIRCglzdHJpbmdfNzEYRyABKAkSEAoI",
            "Ynl0ZXNfNzIYSCABKAwSIQoHdHlwZV84MBhQIAEoDjIQLkdTZXJ2aWNlcy5F",
            "VHlwZRIsCgdNYXBfMTAwGGQgAygLMhsuR1NlcnZpY2VzLkdSZXEuTWFwMTAw",
            "RW50cnkSFwoPc3RyaW5nX2xpc3RfMTAxGGUgAygJEhYKDmludDMyX2xpc3Rf",
            "MTAyGGYgAygFEiwKB01hcF8xMTAYbiADKAsyGy5HU2VydmljZXMuR1JlcS5N",
            "YXAxMTBFbnRyeRIeCgRVc2VyGIIBIAEoCzIPLkdTZXJ2aWNlcy5Vc2VyEh8K",
            "BXVzZXJzGIMBIAMoCzIPLkdTZXJ2aWNlcy5Vc2VyEi0KB01hcF8xMzIYhAEg",
            "AygLMhsuR1NlcnZpY2VzLkdSZXEuTWFwMTMyRW50cnkSFQoKb2ZOYW1lXzMw",
            "MBisAiABKAlIABIWCgtvZk5hbWUyXzMwMRitAiABKAlIABotCgtNYXAxMDBF",
            "bnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBGi0KC01hcDEx",
            "MEVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEoBToCOAEaPgoLTWFw",
            "MTMyRW50cnkSCwoDa2V5GAEgASgJEh4KBXZhbHVlGAIgASgLMg8uR1NlcnZp",
            "Y2VzLlVzZXI6AjgBQgwKCnRlc3Rfb25lb2YiEQoER1JlcxIJCgFhGAEgASgF",
            "IjQKBFVzZXISCgoCaWQYASABKAUSDAoEbmFtZRgDIAEoCRISCgphdHRyaWJ1",
            "dGVzGBQgAygJKikKBUVUeXBlEgsKB0RlZmF1bHQQABIFCgFBEAESBQoBQxAD",
            "EgUKAVgQZGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::GServices.EType), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::GServices.GReq), global::GServices.GReq.Parser, new[]{ "Double10", "Float11", "Int3221", "Int6422", "Uint3230", "Uint6431", "Sint3235", "Sint6436", "Fixed3240", "Fixed6441", "Sfixed3245", "Sfixed6446", "Bool70", "String71", "Bytes72", "Type80", "Map100", "StringList101", "Int32List102", "Map110", "User", "Users", "Map132", "OfName300", "OfName2301" }, new[]{ "TestOneof" }, null, new pbr::GeneratedClrTypeInfo[] { null, null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::GServices.GRes), global::GServices.GRes.Parser, new[]{ "A" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::GServices.User), global::GServices.User.Parser, new[]{ "Id", "Name", "Attributes" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EType {
    [pbr::OriginalName("Default")] Default = 0,
    [pbr::OriginalName("A")] A = 1,
    [pbr::OriginalName("C")] C = 3,
    [pbr::OriginalName("X")] X = 100,
  }

  #endregion

  #region Messages
  public sealed partial class GReq : pb::IMessage<GReq> {
    private static readonly pb::MessageParser<GReq> _parser = new pb::MessageParser<GReq>(() => new GReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GServices.GModelsReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GReq(GReq other) : this() {
      double10_ = other.double10_;
      float11_ = other.float11_;
      int3221_ = other.int3221_;
      int6422_ = other.int6422_;
      uint3230_ = other.uint3230_;
      uint6431_ = other.uint6431_;
      sint3235_ = other.sint3235_;
      sint6436_ = other.sint6436_;
      fixed3240_ = other.fixed3240_;
      fixed6441_ = other.fixed6441_;
      sfixed3245_ = other.sfixed3245_;
      sfixed6446_ = other.sfixed6446_;
      bool70_ = other.bool70_;
      string71_ = other.string71_;
      bytes72_ = other.bytes72_;
      type80_ = other.type80_;
      map100_ = other.map100_.Clone();
      stringList101_ = other.stringList101_.Clone();
      int32List102_ = other.int32List102_.Clone();
      map110_ = other.map110_.Clone();
      user_ = other.user_ != null ? other.user_.Clone() : null;
      users_ = other.users_.Clone();
      map132_ = other.map132_.Clone();
      switch (other.TestOneofCase) {
        case TestOneofOneofCase.OfName300:
          OfName300 = other.OfName300;
          break;
        case TestOneofOneofCase.OfName2301:
          OfName2301 = other.OfName2301;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GReq Clone() {
      return new GReq(this);
    }

    /// <summary>Field number for the "double_10" field.</summary>
    public const int Double10FieldNumber = 10;
    private double double10_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double Double10 {
      get { return double10_; }
      set {
        double10_ = value;
      }
    }

    /// <summary>Field number for the "float_11" field.</summary>
    public const int Float11FieldNumber = 11;
    private float float11_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public float Float11 {
      get { return float11_; }
      set {
        float11_ = value;
      }
    }

    /// <summary>Field number for the "int32_21" field.</summary>
    public const int Int3221FieldNumber = 21;
    private int int3221_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Int3221 {
      get { return int3221_; }
      set {
        int3221_ = value;
      }
    }

    /// <summary>Field number for the "int64_22" field.</summary>
    public const int Int6422FieldNumber = 22;
    private long int6422_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Int6422 {
      get { return int6422_; }
      set {
        int6422_ = value;
      }
    }

    /// <summary>Field number for the "uint32_30" field.</summary>
    public const int Uint3230FieldNumber = 30;
    private uint uint3230_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Uint3230 {
      get { return uint3230_; }
      set {
        uint3230_ = value;
      }
    }

    /// <summary>Field number for the "uint64_31" field.</summary>
    public const int Uint6431FieldNumber = 31;
    private ulong uint6431_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Uint6431 {
      get { return uint6431_; }
      set {
        uint6431_ = value;
      }
    }

    /// <summary>Field number for the "sint32_35" field.</summary>
    public const int Sint3235FieldNumber = 35;
    private int sint3235_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sint3235 {
      get { return sint3235_; }
      set {
        sint3235_ = value;
      }
    }

    /// <summary>Field number for the "sint64_36" field.</summary>
    public const int Sint6436FieldNumber = 36;
    private long sint6436_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sint6436 {
      get { return sint6436_; }
      set {
        sint6436_ = value;
      }
    }

    /// <summary>Field number for the "fixed32_40" field.</summary>
    public const int Fixed3240FieldNumber = 40;
    private uint fixed3240_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint Fixed3240 {
      get { return fixed3240_; }
      set {
        fixed3240_ = value;
      }
    }

    /// <summary>Field number for the "fixed64_41" field.</summary>
    public const int Fixed6441FieldNumber = 41;
    private ulong fixed6441_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ulong Fixed6441 {
      get { return fixed6441_; }
      set {
        fixed6441_ = value;
      }
    }

    /// <summary>Field number for the "sfixed32_45" field.</summary>
    public const int Sfixed3245FieldNumber = 45;
    private int sfixed3245_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Sfixed3245 {
      get { return sfixed3245_; }
      set {
        sfixed3245_ = value;
      }
    }

    /// <summary>Field number for the "sfixed64_46" field.</summary>
    public const int Sfixed6446FieldNumber = 46;
    private long sfixed6446_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Sfixed6446 {
      get { return sfixed6446_; }
      set {
        sfixed6446_ = value;
      }
    }

    /// <summary>Field number for the "bool_70" field.</summary>
    public const int Bool70FieldNumber = 70;
    private bool bool70_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Bool70 {
      get { return bool70_; }
      set {
        bool70_ = value;
      }
    }

    /// <summary>Field number for the "string_71" field.</summary>
    public const int String71FieldNumber = 71;
    private string string71_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string String71 {
      get { return string71_; }
      set {
        string71_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bytes_72" field.</summary>
    public const int Bytes72FieldNumber = 72;
    private pb::ByteString bytes72_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytes72 {
      get { return bytes72_; }
      set {
        bytes72_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type_80" field.</summary>
    public const int Type80FieldNumber = 80;
    private global::GServices.EType type80_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GServices.EType Type80 {
      get { return type80_; }
      set {
        type80_ = value;
      }
    }

    /// <summary>Field number for the "Map_100" field.</summary>
    public const int Map100FieldNumber = 100;
    private static readonly pbc::MapField<string, string>.Codec _map_map100_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 802);
    private readonly pbc::MapField<string, string> map100_ = new pbc::MapField<string, string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Map100 {
      get { return map100_; }
    }

    /// <summary>Field number for the "string_list_101" field.</summary>
    public const int StringList101FieldNumber = 101;
    private static readonly pb::FieldCodec<string> _repeated_stringList101_codec
        = pb::FieldCodec.ForString(810);
    private readonly pbc::RepeatedField<string> stringList101_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> StringList101 {
      get { return stringList101_; }
    }

    /// <summary>Field number for the "int32_list_102" field.</summary>
    public const int Int32List102FieldNumber = 102;
    private static readonly pb::FieldCodec<int> _repeated_int32List102_codec
        = pb::FieldCodec.ForInt32(818);
    private readonly pbc::RepeatedField<int> int32List102_ = new pbc::RepeatedField<int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<int> Int32List102 {
      get { return int32List102_; }
    }

    /// <summary>Field number for the "Map_110" field.</summary>
    public const int Map110FieldNumber = 110;
    private static readonly pbc::MapField<string, int>.Codec _map_map110_codec
        = new pbc::MapField<string, int>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt32(16), 882);
    private readonly pbc::MapField<string, int> map110_ = new pbc::MapField<string, int>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, int> Map110 {
      get { return map110_; }
    }

    /// <summary>Field number for the "User" field.</summary>
    public const int UserFieldNumber = 130;
    private global::GServices.User user_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::GServices.User User {
      get { return user_; }
      set {
        user_ = value;
      }
    }

    /// <summary>Field number for the "users" field.</summary>
    public const int UsersFieldNumber = 131;
    private static readonly pb::FieldCodec<global::GServices.User> _repeated_users_codec
        = pb::FieldCodec.ForMessage(1050, global::GServices.User.Parser);
    private readonly pbc::RepeatedField<global::GServices.User> users_ = new pbc::RepeatedField<global::GServices.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::GServices.User> Users {
      get { return users_; }
    }

    /// <summary>Field number for the "Map_132" field.</summary>
    public const int Map132FieldNumber = 132;
    private static readonly pbc::MapField<string, global::GServices.User>.Codec _map_map132_codec
        = new pbc::MapField<string, global::GServices.User>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForMessage(18, global::GServices.User.Parser), 1058);
    private readonly pbc::MapField<string, global::GServices.User> map132_ = new pbc::MapField<string, global::GServices.User>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, global::GServices.User> Map132 {
      get { return map132_; }
    }

    /// <summary>Field number for the "ofName_300" field.</summary>
    public const int OfName300FieldNumber = 300;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfName300 {
      get { return testOneofCase_ == TestOneofOneofCase.OfName300 ? (string) testOneof_ : ""; }
      set {
        testOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        testOneofCase_ = TestOneofOneofCase.OfName300;
      }
    }

    /// <summary>Field number for the "ofName2_301" field.</summary>
    public const int OfName2301FieldNumber = 301;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OfName2301 {
      get { return testOneofCase_ == TestOneofOneofCase.OfName2301 ? (string) testOneof_ : ""; }
      set {
        testOneof_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        testOneofCase_ = TestOneofOneofCase.OfName2301;
      }
    }

    private object testOneof_;
    /// <summary>Enum of possible cases for the "test_oneof" oneof.</summary>
    public enum TestOneofOneofCase {
      None = 0,
      OfName300 = 300,
      OfName2301 = 301,
    }
    private TestOneofOneofCase testOneofCase_ = TestOneofOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TestOneofOneofCase TestOneofCase {
      get { return testOneofCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearTestOneof() {
      testOneofCase_ = TestOneofOneofCase.None;
      testOneof_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Double10, other.Double10)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Float11, other.Float11)) return false;
      if (Int3221 != other.Int3221) return false;
      if (Int6422 != other.Int6422) return false;
      if (Uint3230 != other.Uint3230) return false;
      if (Uint6431 != other.Uint6431) return false;
      if (Sint3235 != other.Sint3235) return false;
      if (Sint6436 != other.Sint6436) return false;
      if (Fixed3240 != other.Fixed3240) return false;
      if (Fixed6441 != other.Fixed6441) return false;
      if (Sfixed3245 != other.Sfixed3245) return false;
      if (Sfixed6446 != other.Sfixed6446) return false;
      if (Bool70 != other.Bool70) return false;
      if (String71 != other.String71) return false;
      if (Bytes72 != other.Bytes72) return false;
      if (Type80 != other.Type80) return false;
      if (!Map100.Equals(other.Map100)) return false;
      if(!stringList101_.Equals(other.stringList101_)) return false;
      if(!int32List102_.Equals(other.int32List102_)) return false;
      if (!Map110.Equals(other.Map110)) return false;
      if (!object.Equals(User, other.User)) return false;
      if(!users_.Equals(other.users_)) return false;
      if (!Map132.Equals(other.Map132)) return false;
      if (OfName300 != other.OfName300) return false;
      if (OfName2301 != other.OfName2301) return false;
      if (TestOneofCase != other.TestOneofCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Double10 != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Double10);
      if (Float11 != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Float11);
      if (Int3221 != 0) hash ^= Int3221.GetHashCode();
      if (Int6422 != 0L) hash ^= Int6422.GetHashCode();
      if (Uint3230 != 0) hash ^= Uint3230.GetHashCode();
      if (Uint6431 != 0UL) hash ^= Uint6431.GetHashCode();
      if (Sint3235 != 0) hash ^= Sint3235.GetHashCode();
      if (Sint6436 != 0L) hash ^= Sint6436.GetHashCode();
      if (Fixed3240 != 0) hash ^= Fixed3240.GetHashCode();
      if (Fixed6441 != 0UL) hash ^= Fixed6441.GetHashCode();
      if (Sfixed3245 != 0) hash ^= Sfixed3245.GetHashCode();
      if (Sfixed6446 != 0L) hash ^= Sfixed6446.GetHashCode();
      if (Bool70 != false) hash ^= Bool70.GetHashCode();
      if (String71.Length != 0) hash ^= String71.GetHashCode();
      if (Bytes72.Length != 0) hash ^= Bytes72.GetHashCode();
      if (Type80 != 0) hash ^= Type80.GetHashCode();
      hash ^= Map100.GetHashCode();
      hash ^= stringList101_.GetHashCode();
      hash ^= int32List102_.GetHashCode();
      hash ^= Map110.GetHashCode();
      if (user_ != null) hash ^= User.GetHashCode();
      hash ^= users_.GetHashCode();
      hash ^= Map132.GetHashCode();
      if (testOneofCase_ == TestOneofOneofCase.OfName300) hash ^= OfName300.GetHashCode();
      if (testOneofCase_ == TestOneofOneofCase.OfName2301) hash ^= OfName2301.GetHashCode();
      hash ^= (int) testOneofCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Double10 != 0D) {
        output.WriteRawTag(81);
        output.WriteDouble(Double10);
      }
      if (Float11 != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(Float11);
      }
      if (Int3221 != 0) {
        output.WriteRawTag(168, 1);
        output.WriteInt32(Int3221);
      }
      if (Int6422 != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(Int6422);
      }
      if (Uint3230 != 0) {
        output.WriteRawTag(240, 1);
        output.WriteUInt32(Uint3230);
      }
      if (Uint6431 != 0UL) {
        output.WriteRawTag(248, 1);
        output.WriteUInt64(Uint6431);
      }
      if (Sint3235 != 0) {
        output.WriteRawTag(152, 2);
        output.WriteSInt32(Sint3235);
      }
      if (Sint6436 != 0L) {
        output.WriteRawTag(160, 2);
        output.WriteSInt64(Sint6436);
      }
      if (Fixed3240 != 0) {
        output.WriteRawTag(197, 2);
        output.WriteFixed32(Fixed3240);
      }
      if (Fixed6441 != 0UL) {
        output.WriteRawTag(201, 2);
        output.WriteFixed64(Fixed6441);
      }
      if (Sfixed3245 != 0) {
        output.WriteRawTag(237, 2);
        output.WriteSFixed32(Sfixed3245);
      }
      if (Sfixed6446 != 0L) {
        output.WriteRawTag(241, 2);
        output.WriteSFixed64(Sfixed6446);
      }
      if (Bool70 != false) {
        output.WriteRawTag(176, 4);
        output.WriteBool(Bool70);
      }
      if (String71.Length != 0) {
        output.WriteRawTag(186, 4);
        output.WriteString(String71);
      }
      if (Bytes72.Length != 0) {
        output.WriteRawTag(194, 4);
        output.WriteBytes(Bytes72);
      }
      if (Type80 != 0) {
        output.WriteRawTag(128, 5);
        output.WriteEnum((int) Type80);
      }
      map100_.WriteTo(output, _map_map100_codec);
      stringList101_.WriteTo(output, _repeated_stringList101_codec);
      int32List102_.WriteTo(output, _repeated_int32List102_codec);
      map110_.WriteTo(output, _map_map110_codec);
      if (user_ != null) {
        output.WriteRawTag(146, 8);
        output.WriteMessage(User);
      }
      users_.WriteTo(output, _repeated_users_codec);
      map132_.WriteTo(output, _map_map132_codec);
      if (testOneofCase_ == TestOneofOneofCase.OfName300) {
        output.WriteRawTag(226, 18);
        output.WriteString(OfName300);
      }
      if (testOneofCase_ == TestOneofOneofCase.OfName2301) {
        output.WriteRawTag(234, 18);
        output.WriteString(OfName2301);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Double10 != 0D) {
        size += 1 + 8;
      }
      if (Float11 != 0F) {
        size += 1 + 4;
      }
      if (Int3221 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeInt32Size(Int3221);
      }
      if (Int6422 != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(Int6422);
      }
      if (Uint3230 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeUInt32Size(Uint3230);
      }
      if (Uint6431 != 0UL) {
        size += 2 + pb::CodedOutputStream.ComputeUInt64Size(Uint6431);
      }
      if (Sint3235 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeSInt32Size(Sint3235);
      }
      if (Sint6436 != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeSInt64Size(Sint6436);
      }
      if (Fixed3240 != 0) {
        size += 2 + 4;
      }
      if (Fixed6441 != 0UL) {
        size += 2 + 8;
      }
      if (Sfixed3245 != 0) {
        size += 2 + 4;
      }
      if (Sfixed6446 != 0L) {
        size += 2 + 8;
      }
      if (Bool70 != false) {
        size += 2 + 1;
      }
      if (String71.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(String71);
      }
      if (Bytes72.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(Bytes72);
      }
      if (Type80 != 0) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Type80);
      }
      size += map100_.CalculateSize(_map_map100_codec);
      size += stringList101_.CalculateSize(_repeated_stringList101_codec);
      size += int32List102_.CalculateSize(_repeated_int32List102_codec);
      size += map110_.CalculateSize(_map_map110_codec);
      if (user_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(User);
      }
      size += users_.CalculateSize(_repeated_users_codec);
      size += map132_.CalculateSize(_map_map132_codec);
      if (testOneofCase_ == TestOneofOneofCase.OfName300) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfName300);
      }
      if (testOneofCase_ == TestOneofOneofCase.OfName2301) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(OfName2301);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GReq other) {
      if (other == null) {
        return;
      }
      if (other.Double10 != 0D) {
        Double10 = other.Double10;
      }
      if (other.Float11 != 0F) {
        Float11 = other.Float11;
      }
      if (other.Int3221 != 0) {
        Int3221 = other.Int3221;
      }
      if (other.Int6422 != 0L) {
        Int6422 = other.Int6422;
      }
      if (other.Uint3230 != 0) {
        Uint3230 = other.Uint3230;
      }
      if (other.Uint6431 != 0UL) {
        Uint6431 = other.Uint6431;
      }
      if (other.Sint3235 != 0) {
        Sint3235 = other.Sint3235;
      }
      if (other.Sint6436 != 0L) {
        Sint6436 = other.Sint6436;
      }
      if (other.Fixed3240 != 0) {
        Fixed3240 = other.Fixed3240;
      }
      if (other.Fixed6441 != 0UL) {
        Fixed6441 = other.Fixed6441;
      }
      if (other.Sfixed3245 != 0) {
        Sfixed3245 = other.Sfixed3245;
      }
      if (other.Sfixed6446 != 0L) {
        Sfixed6446 = other.Sfixed6446;
      }
      if (other.Bool70 != false) {
        Bool70 = other.Bool70;
      }
      if (other.String71.Length != 0) {
        String71 = other.String71;
      }
      if (other.Bytes72.Length != 0) {
        Bytes72 = other.Bytes72;
      }
      if (other.Type80 != 0) {
        Type80 = other.Type80;
      }
      map100_.Add(other.map100_);
      stringList101_.Add(other.stringList101_);
      int32List102_.Add(other.int32List102_);
      map110_.Add(other.map110_);
      if (other.user_ != null) {
        if (user_ == null) {
          User = new global::GServices.User();
        }
        User.MergeFrom(other.User);
      }
      users_.Add(other.users_);
      map132_.Add(other.map132_);
      switch (other.TestOneofCase) {
        case TestOneofOneofCase.OfName300:
          OfName300 = other.OfName300;
          break;
        case TestOneofOneofCase.OfName2301:
          OfName2301 = other.OfName2301;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 81: {
            Double10 = input.ReadDouble();
            break;
          }
          case 93: {
            Float11 = input.ReadFloat();
            break;
          }
          case 168: {
            Int3221 = input.ReadInt32();
            break;
          }
          case 176: {
            Int6422 = input.ReadInt64();
            break;
          }
          case 240: {
            Uint3230 = input.ReadUInt32();
            break;
          }
          case 248: {
            Uint6431 = input.ReadUInt64();
            break;
          }
          case 280: {
            Sint3235 = input.ReadSInt32();
            break;
          }
          case 288: {
            Sint6436 = input.ReadSInt64();
            break;
          }
          case 325: {
            Fixed3240 = input.ReadFixed32();
            break;
          }
          case 329: {
            Fixed6441 = input.ReadFixed64();
            break;
          }
          case 365: {
            Sfixed3245 = input.ReadSFixed32();
            break;
          }
          case 369: {
            Sfixed6446 = input.ReadSFixed64();
            break;
          }
          case 560: {
            Bool70 = input.ReadBool();
            break;
          }
          case 570: {
            String71 = input.ReadString();
            break;
          }
          case 578: {
            Bytes72 = input.ReadBytes();
            break;
          }
          case 640: {
            Type80 = (global::GServices.EType) input.ReadEnum();
            break;
          }
          case 802: {
            map100_.AddEntriesFrom(input, _map_map100_codec);
            break;
          }
          case 810: {
            stringList101_.AddEntriesFrom(input, _repeated_stringList101_codec);
            break;
          }
          case 818:
          case 816: {
            int32List102_.AddEntriesFrom(input, _repeated_int32List102_codec);
            break;
          }
          case 882: {
            map110_.AddEntriesFrom(input, _map_map110_codec);
            break;
          }
          case 1042: {
            if (user_ == null) {
              User = new global::GServices.User();
            }
            input.ReadMessage(User);
            break;
          }
          case 1050: {
            users_.AddEntriesFrom(input, _repeated_users_codec);
            break;
          }
          case 1058: {
            map132_.AddEntriesFrom(input, _map_map132_codec);
            break;
          }
          case 2402: {
            OfName300 = input.ReadString();
            break;
          }
          case 2410: {
            OfName2301 = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class GRes : pb::IMessage<GRes> {
    private static readonly pb::MessageParser<GRes> _parser = new pb::MessageParser<GRes>(() => new GRes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GRes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GServices.GModelsReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GRes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GRes(GRes other) : this() {
      a_ = other.a_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GRes Clone() {
      return new GRes(this);
    }

    /// <summary>Field number for the "a" field.</summary>
    public const int AFieldNumber = 1;
    private int a_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int A {
      get { return a_; }
      set {
        a_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GRes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GRes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (A != other.A) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (A != 0) hash ^= A.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (A != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(A);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (A != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(A);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GRes other) {
      if (other == null) {
        return;
      }
      if (other.A != 0) {
        A = other.A;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            A = input.ReadInt32();
            break;
          }
        }
      }
    }

  }

  public sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::GServices.GModelsReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      id_ = other.id_;
      name_ = other.name_;
      attributes_ = other.attributes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attributes" field.</summary>
    public const int AttributesFieldNumber = 20;
    private static readonly pb::FieldCodec<string> _repeated_attributes_codec
        = pb::FieldCodec.ForString(162);
    private readonly pbc::RepeatedField<string> attributes_ = new pbc::RepeatedField<string>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Attributes {
      get { return attributes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Name != other.Name) return false;
      if(!attributes_.Equals(other.attributes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      hash ^= attributes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      attributes_.WriteTo(output, _repeated_attributes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      size += attributes_.CalculateSize(_repeated_attributes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      attributes_.Add(other.attributes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 162: {
            attributes_.AddEntriesFrom(input, _repeated_attributes_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
